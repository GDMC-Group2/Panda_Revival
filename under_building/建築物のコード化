1建築物をコードにする方法.

参考として, under_apartment,under_houseを参考にすると良い(多分)


  1.必要なライブラリのインポート
from gdpc import Editor, Block, geometry, Transform
をインポートする.
それぞれ,
Editor:ブロックの設置,調査等の操作を行う最も基本のライブラリ
Block:ブロック情報を処理するためのライブラリ
geometry:一括設置を行うライブラリ
Transform:基本座標変換,向き回転を行うライブラリ

2.座標系の変換
建築を行うためのeditor.placeBlockは入力として,設置する座標とブロックの情報が必要になる.
ここで,座標について後に回転などの処理を行いやすくするためにTransformを使用して座標系を変換する.
(詳しくはGDPCのリファレンスのtransformの章を参照)

with editor.pushTransform(Transdform(座標),rotation=rotation):

とすることで基準座標を設定した座標に変換できる.
ここでeditor.placeBlock([0,0,0],Block("stone"))
をwith下で実行すると,Minecraftの座標[0,0,0]ではなく,座標として入力した場所に設置される.

rotationは向きであり,この値を変更することで回転させることができる.
0がeast向きであり,east向きに作って変換すると都合がいい.
(east向きにした時の左下側が基準座標になるようにする)


3.ブロック情報
ブロックを設置するには,ブロック情報が必要になる
F3を押して座標などの情報が表示されている時に,設置されてるブロックにカーソルを合わせると
画面右側の TargetBlock の下にminecraft:ブロック名　と表示される.
この時,下側に#マークが文頭についていないテキストがあれば,そのテキストはデータである.
向きなどの情報が格納されているため,ブロック情報として入力する必要がある

例
  editor.placeBlock([0,0,0],Block("oak_log",{"axis":"y"})) 
上方向のオークの原木を設置.
この記述がない場合,ブロックごとにデフォルトで決められた値を自動入力する
階段などの"waterlogged"(水がブロックに入っているか)は水を使っていない場所なら無視してよい.

4.特殊なブロック
ベッドやドアなどの設置時に複数ブロックになるブロックは,under_build内に関数として定義している

絵画,額縁,アーマースタンドを設置する場合,やや特殊な処理が必要になる.
これらはMinecraft内でコマンドを実行する事で設置ができ,そのためにはTrasform座標ではなく,Minecraft座標が必要になる.
base_coor(基準点となる座標)とbuild_coor（基準点からいくつ離れているかの座標）を足し合わせた座標を入力する必要がある.
詳しくは聞くかコードを読んでほしい.


最後に,屋根が大変になると思いますが頑張ってください.
何か分からないことがあればぜひ聞いてください






